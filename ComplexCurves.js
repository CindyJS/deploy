/**
 * @license
 *
 * Complex Curves
 *
 * Copyright 2016-2017 Stefan Kranich
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
(function(){
'use strict';var l,aa={"Assembly.vert":"#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\nin float index;\nuniform float numIndices;\nuniform sampler2D samplers[1 + N/2];\nuniform float sheet;\nout vec4 posValue;\nvec2 texCoord[3];\n\n#define W 2048.0\n#define H 2048.0\nvec2 uvPosition (in float i) {\n    return vec2 (mod (i, W) / W + 0.5 / W, floor (i / W) / H + 0.5 / H);\n}\n\nvoid readTex (out vec2 pos[3], out float delta[3], out vec2 values[3*N]) {\n    vec4 s;\n    for (int i = 0; i < 3; i++) {\n        s = texture (samplers[0], texCoord[i]);\n        pos[i] = s.xy;\n        delta[i] = s.z;\n        for (int j = 1; j < N/2; j++) {\n            s = texture (samplers[j], texCoord[i]);\n            values[i*N+2*j-2] = s.xy;\n            values[i*N+2*j-1] = s.zw;\n        }\n    }\n}\n\nbool valid (in vec2 position[3], in float delta[3]) {\n    return distance (position[0], position[1]) < min (delta[0], delta[1])\n    && distance (position[1], position[2]) < min (delta[1], delta[2])\n    && distance (position[2], position[0]) < min (delta[2], delta[0]);\n}\n\nvoid main(void) {\n    float which = mod (index, 3.0);\n    texCoord[0] = uvPosition (index - which);\n    texCoord[1] = uvPosition (index - which + 1.0);\n    texCoord[2] = uvPosition (index - which + 2.0);\n\n    int isheet = int(sheet);\n    if (isheet < sheets) {\n        vec2 pos[3];\n        float delta[3];\n        vec2 values[3*N];\n        readTex (pos, delta, values);\n        if (valid (pos, delta)) {\n            for (int s = 0; s < sheets; s++) {\n                if (s == isheet) {\n                    vec2 valueA = values[s];\n                    int iwhich = int(which);\n                    for (int w = 0; w < 3; w++) {\n                        if (w == iwhich) {\n                            vec2 valueWhich = values[w*N];\n                            float dist, minDist = distance (valueA, valueWhich);\n                            for (int i = 1; i < sheets; i++) {\n                                dist = distance (valueA, values[w*N+i]);\n                                if (dist < minDist)\n                                {\n                                    valueWhich = values[w*N+i];\n                                    minDist = dist;\n                                }\n                            }\n                            posValue = vec4(pos[w], valueWhich);\n                        }\n                    }\n                }\n            }\n        return;\n        }\n    }\n    posValue = vec4(-10.0, -10.0, -10.0, 1.0);\n}\n",
"CachedSurface.frag":"#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\nuniform bool clipping;\nvarying vec4 vPos;\nvarying vec2 vValue;\nvec3 hue_to_rgb (in float hue)\n{\n    hue = mod (degrees (hue), 360.0) / 60.0;\n    int h = int (floor (hue));\n    float f = fract (hue);\n    if (h == 0)\n        return vec3 (1.0, f, 0.0);\n    else if (h == 1)\n        return vec3 (1.0 - f, 1.0, 0.0);\n    else if (h == 2)\n        return vec3 (0.0, 1.0, f);\n    else if (h == 3)\n        return vec3 (0.0, 1.0 - f, 1.0);\n    else if (h == 4)\n        return vec3 (f, 0.0, 1.0);\n    else if (h == 5)\n        return vec3 (1.0, 0.0, 1.0 - f);\n}\nfloat sawfct (float x, float dx, float a, float b)\n{\n    return a + (b - a) * fract (x / dx);\n}\nvoid main (void)\n{\n    if (clipping && vPos.y < 0.0)\n        discard;\n    float PI = acos (-1.0);\n    float angle = atan (vValue.y, vValue.x);\n    float blackp = sawfct (angle, PI / 12.0, 0.7, 1.0);\n    float blackm = sawfct (log (length (vValue)), PI / 12.0, 0.7, 1.0);\n    float black = blackp * blackm;\n    gl_FragColor = vec4 (black * hue_to_rgb (angle), gl_FragCoord.z);\n}\n",
"CachedSurface.vert":"#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\nattribute vec4 position;\nuniform mat4 m, v, p;\nvarying vec4 vPos;\nvarying vec2 vValue;\nvoid main (void)\n{\n    vPos = vec4 (position.xyz, 1.0);\n    vValue = position.zw;\n    gl_Position = p * v * m * vPos;\n}\n","Common.glsl":"#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n#define EPS 5e-3\n\n/* complex division */\nvec2 cd (in vec2 a, in vec2 b) {\n\treturn vec2 (a.x * b.x + a.y * b.y, a.y * b.x - a.x * b.y) / dot (b, b);\n}\n\nvec2 cinv (in vec2 z) {\n    return vec2(z.x, -z.y) / dot(z, z);\n}\n\n/* complex square root */\nvec2 csqrt (in vec2 z)\n{\n    float r = sqrt (length (z));\n    float phi = 0.5 * atan (z.y, z.x);\n    return r * vec2 (cos (phi), sin (phi));\n}\n\nvec2 horner (in int n, in vec2 cs[N+1], in vec2 x) {\n    vec2 p;\n    for (int i = N - 1; i >= 0; i--)\n        if (i >= n)\n            p = cs[i];\n        else if (i < n)\n            p = cs[i] + cm(p, x);\n    return p;\n}\n\nvoid weierstrass (in vec2 cs[N+1], out vec2 roots2[N]) {\n\t/* polynomial must be monic! */\n    vec2 csn = cs[sheets];\n    if (csn != vec2 (1.0, 0.0))\n        for (int i = 0; i <= sheets; i++)\n            cs[i] = cd (cs[i], csn);\n\n    float maxabs = length (cs[0]);\n    for (int i = 1; i < N; i++)\n        if (i < sheets)\n            maxabs = max (maxabs, length (cs[i]));\n    float upperBound = 1.0 + maxabs; /// length (cs[n]);\n    float phi = 2.0 * acos (-1.0) / float (sheets + 1);\n    float d = upperBound / float (sheets);\n    d = clamp (d, 1.0, 10.0);\n\tfor (int i = 0; i < sheets; i++)\n        roots2[i] = float (i) * d * vec2 (cos (float (i) * phi), sin (float (i) * phi));\n\n\tconst int maxiter = 50;\n\tbool changing;\n\tfor (int iter = 0; iter < maxiter; iter++)\n\t{\n\t\tchanging = false;\n\t\tfor (int i = 0; i < sheets; i++)\n        {\n            vec2 result = vec2 (1.0, 0.0);\n            for (int j = 0; j < sheets; j++)\n                if (j != i)\n                    result = cm (result, roots2[i] - roots2[j]);\n            vec2 update = cd (horner (sheets, cs, roots2[i]), result);\n            ///* safe-guard against large update */\n            //if (sheets > 1 && length (update) > 10)\n            //\tupdate /= length (update);\n            if (length (update) > 1e-2)\n                changing = true;\n            roots2[i] -= update;\n        }\n        if (!changing)\n            break;\n\t}\n}\n\nvoid quadratic_roots (in vec2 cs[N+1], out vec2 qroots[2]) {\n    if (cs[0] == vec2 (0.0, 0.0)) {\n        qroots[0] = vec2 (0.0, 0.0);\n        qroots[1] = -cd (cs[1], cs[2]);\n    }\n    else\n    {\n        vec2 r = csqrt (cm (cs[1], cs[1]) - 4.0 * cm (cs[2], cs[0]));\n        if (cs[1].x >= 0.0)\n            r = -r;\n        qroots[0] = cd (r - cs[1], 2.0 * cs[2]);\n        qroots[1] = cd (2.0 * cs[0], r - cs[1]);\n    }\n}\n\nvoid roots (in int n, in vec2 cs[N+1], out vec2 roots[N])\n{\n    if (n == 1) {\n        roots[0] = -cd (cs[0], cs[1]);\n        return;\n    }\n    if (n == 2) {\n        vec2 qroots[2];\n        quadratic_roots (cs, qroots);\n        roots[0] = qroots[0];\n        roots[1] = qroots[1];\n        return;\n    }\n    weierstrass (cs, roots);\n    /* selection sort by real part */\n    /*\n    for(int i = 0; i < n - 1; i++)\n    {\n        int jmin = i;\n        for (int j = i + 1; j < n; j++)\n            if (roots[j].x < roots[jmin].x)\n                jmin = j;\n        vec2 z = roots[i];\n        roots[i] = roots[jmin];\n        roots[jmin] = z;\n    }\n    */\n}\n\nvoid f (in vec2 x, out vec2 cs[N+1]);\nvec2 fx (in vec2 x, in vec2 y);\nvec2 fy (in vec2 x, in vec2 y);\nfloat rho (in vec2 x);\nfloat M (in vec2 x, in float rho);\n\nfloat epsilon (in vec2 ys[N]) {\n    float d = distance (ys[0], ys[1]);\n    if (sheets < 2)\n        return 1.0 / 0.0;\n    for (int j = 0; j < sheets; j++) {\n        for (int k = 0; k < sheets; k++) {\n            if (k > j)\n                d = min (d, distance (ys[j], ys[k]));\n        }\n    }\n    return d / 2.0;\n}\n\nfloat Y (in vec2 x, in vec2 ys[N]) {\n    float y = length (cd (fx (x, ys[0]), fy (x, ys[0])));\n    for (int j = 0; j < sheets; j++)\n        y = max (y, length (cd (fx (x, ys[j]), fy (x, ys[j]))));\n    return y;\n}\n\nfloat Delta (in vec2 x, in vec2 ys[N]) {\n    float eps = epsilon (ys);\n    float r = rho (x);\n    float m = M (x, r);\n    float y = Y (x, ys);\n    return r * (sqrt (pow (r * y - eps, 2.0) + 4.0 * eps * m) -\n        (r * y + eps)) / (2.0 * (m - r * y));\n}\n",
"DomainColouring.frag":"uniform int sheet;\nvarying vec2 vPosition;\nvec3 hue_to_rgb (in float hue)\n{\n    hue = mod (degrees (hue), 360.0) / 60.0;\n    int h = int (floor (hue));\n    float f = fract (hue);\n    if (h == 0)\n        return vec3 (1.0, f, 0.0);\n    else if (h == 1)\n        return vec3 (1.0 - f, 1.0, 0.0);\n    else if (h == 2)\n        return vec3 (0.0, 1.0, f);\n    else if (h == 3)\n        return vec3 (0.0, 1.0 - f, 1.0);\n    else if (h == 4)\n        return vec3 (f, 0.0, 1.0);\n    else if (h == 5)\n        return vec3 (1.0, 0.0, 1.0 - f);\n}\nfloat sawfct (float x, float dx, float a, float b)\n{\n    return a + (b - a) * fract (x / dx);\n}\nvoid main (void)\n{\n    vec2 cs[N+1];\n    vec2 ys[N];\n    vec2 value;\n    f (vPosition, cs);\n    roots (sheets, cs, ys);\n    int smaller;\n    for (int i = 0; i < sheets; i++)\n    {\n        smaller = 0;\n        for (int j = 0; j < sheets; j++)\n            if (ys[j].x < ys[i].x)\n                smaller++;\n        if (smaller == sheet - 1)\n            value = ys[i];\n    }\n        \n    float PI = acos (-1.0);\n    float angle = atan (value.y, value.x);\n    float blackp = sawfct (angle, PI / 12.0, 0.7, 1.0);\n    float blackm = sawfct (log (length (value)), PI / 12.0, 0.7, 1.0);\n    float black = blackp * blackm;\n    gl_FragColor = vec4 (black * hue_to_rgb(angle), 1.0);\n}\n",
"DomainColouring.vert":"#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\nattribute vec2 position;\nvarying vec2 vPosition;\nvoid main () {\n    gl_Position = vec4 (position, 0.0, 1.0);\n    vPosition = 5.0 * position;\n}\n","Dummy.frag":"#version 300 es\n#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\nout vec4 fColor;\nvoid main(void) {\n    fColor = vec4(1.0);\n}\n","Export.frag":"#version 300 es\n#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\nin vec2 vValue;\nout vec4 fColor;\nvec3 hue_to_rgb (in float hue)\n{\n    hue = mod (degrees (hue), 360.0) / 60.0;\n    int h = int (floor (hue));\n    float f = fract (hue);\n    if (h == 0)\n        return vec3 (1.0, f, 0.0);\n    else if (h == 1)\n        return vec3 (1.0 - f, 1.0, 0.0);\n    else if (h == 2)\n        return vec3 (0.0, 1.0, f);\n    else if (h == 3)\n        return vec3 (0.0, 1.0 - f, 1.0);\n    else if (h == 4)\n        return vec3 (f, 0.0, 1.0);\n    else if (h == 5)\n        return vec3 (1.0, 0.0, 1.0 - f);\n}\nfloat sawfct (float x, float dx, float a, float b)\n{\n    return a + (b - a) * fract (x / dx);\n}\nvoid main (void)\n{\n    float PI = acos (-1.0);\n    float angle = atan (vValue.y, vValue.x);\n    float blackp = sawfct (angle / (2.0 * PI), 0.05, 0.7, 1.0);\n    float blackm = sawfct (log (length (vValue)), 0.1 * PI, 0.7, 1.0);\n    float black = blackp * blackm;\n    fColor = vec4 (black * hue_to_rgb(angle), 1.0);\n}\n",
"Export.vert":"#version 300 es\nuniform float maxValue;\nuniform float minValue;\nin vec2 vPosition;\nout vec2 vValue;\n\nvoid main()\n{\n  gl_Position = vec4(vPosition, 0.0, 1.0);\n  vValue = 0.5 * (maxValue - minValue) * (vPosition + vec2 (1.0, 1.0))\n    + vec2 (minValue, minValue);\n}\n","FXAA.frag":"#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\nuniform sampler2D u_tex;\nuniform float width;\nuniform float height;\n\n#define FXAA_REDUCE_MIN (1.0/ 128.0)\n#define FXAA_REDUCE_MUL (1.0 / 8.0)\n#define FXAA_SPAN_MAX 8.0\n// from https://github.com/mitsuhiko/webgl-meincraft/blob/master/assets/shaders/fxaa.glsl\nvec4 applyFXAA(in vec2 fragCoord, in sampler2D tex)\n{\n    vec4 color;\n    vec2 inverseVP = vec2(1.0 / width, 1.0 / height);\n    vec3 rgbNW = texture2D(tex, (fragCoord + vec2(-1.0, -1.0)) * inverseVP).xyz;\n    vec3 rgbNE = texture2D(tex, (fragCoord + vec2(1.0, -1.0)) * inverseVP).xyz;\n    vec3 rgbSW = texture2D(tex, (fragCoord + vec2(-1.0, 1.0)) * inverseVP).xyz;\n    vec3 rgbSE = texture2D(tex, (fragCoord + vec2(1.0, 1.0)) * inverseVP).xyz;\n    vec3 rgbM = texture2D(tex, fragCoord * inverseVP).xyz;\n    vec3 luma = vec3(0.299, 0.587, 0.114);\n    float lumaNW = dot(rgbNW, luma);\n    float lumaNE = dot(rgbNE, luma);\n    float lumaSW = dot(rgbSW, luma);\n    float lumaSE = dot(rgbSE, luma);\n    float lumaM = dot(rgbM, luma);\n    float lumaMin = min(lumaM, min(min(lumaNW, lumaNE), min(lumaSW, lumaSE)));\n    float lumaMax = max(lumaM, max(max(lumaNW, lumaNE), max(lumaSW, lumaSE)));\n    vec2 dir;\n    dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\n    dir.y = ((lumaNW + lumaSW) - (lumaNE + lumaSE));\n    float dirReduce = max((lumaNW + lumaNE + lumaSW + lumaSE) *\n    (0.25 * FXAA_REDUCE_MUL), FXAA_REDUCE_MIN);\n    float rcpDirMin = 1.0 / (min(abs(dir.x), abs(dir.y)) + dirReduce);\n    dir = min(vec2(FXAA_SPAN_MAX, FXAA_SPAN_MAX),\n    max(vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\n    dir * rcpDirMin)) * inverseVP;\n    vec3 rgbA = 0.5 * (\n    texture2D(tex, fragCoord * inverseVP + dir * (1.0 / 3.0 - 0.5)).xyz +\n    texture2D(tex, fragCoord * inverseVP + dir * (2.0 / 3.0 - 0.5)).xyz);\n    vec3 rgbB = rgbA * 0.5 + 0.25 * (\n    texture2D(tex, fragCoord * inverseVP + dir * -0.5).xyz +\n    texture2D(tex, fragCoord * inverseVP + dir * 0.5).xyz);\n    float lumaB = dot(rgbB, luma);\n    if ((lumaB < lumaMin) || (lumaB > lumaMax))\n        color = vec4(rgbA, 1.0);\n    else\n        color = vec4(rgbB, 1.0);\n    return color;\n}\n\nvoid main (void)\n{\n    gl_FragColor = applyFXAA(gl_FragCoord.xy, u_tex);\n}\n",
"FXAA.vert":"#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\nattribute vec2 vPosition;\nvoid main()\n{\n  gl_Position = vec4(vPosition, 0.0, 1.0);\n}\n","Initial.vert":"#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\nin vec2 pos;\nout vec2 position;\nout float delta;\nout float subdivisionFlag;\nout vec2 values[N];\nvoid main (void) {\n    position = clamp (pos, -5.0, 5.0);\n    vec2 cs[N+1];\n    f (position, cs);\n    roots (sheets, cs, values);\n    delta = Delta (position, values);\n    subdivisionFlag = 1.0;\n}\n",
"Subdivision.vert":"#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\nin vec3 barycentric;\nin float indexOffsetIn;\nuniform sampler2D samplers[1 + N/2];\nout vec2 position;\nout float delta;\nout float subdivisionFlag;\nout vec2 values[N];\n\n#define W 2048.0\n#define H 2048.0\nvec2 uvPosition (in float i) {\n    return vec2 (mod (i, W) / W + 0.5 / W, floor (i / W) / H + 0.5 / H);\n}\n\nvoid main (void) {\n    vec2 texCoord[3];\n    texCoord[0] = uvPosition (indexOffsetIn);\n    texCoord[1] = uvPosition (indexOffsetIn + 1.0);\n    texCoord[2] = uvPosition (indexOffsetIn + 2.0);\n    vec4 tmp;\n\n    if (barycentric == vec3 (1.0, 0.0, 0.0)) {\n        tmp = texture (samplers[0], texCoord[0]);\n        position = tmp.xy;\n        delta = tmp.z;\n        subdivisionFlag = tmp.w;\n        for (int j = 1; j < 1 + N/2; j++) {\n            tmp = texture (samplers[j], texCoord[0]);\n            values[2 * j - 2] = tmp.xy;\n            values[2 * j - 1] = tmp.zw;\n        }\n    } else if (barycentric == vec3 (0.0, 1.0, 0.0)) {\n        tmp = texture (samplers[0], texCoord[1]);\n        position = tmp.xy;\n        delta = tmp.z;\n        subdivisionFlag = tmp.w;\n        for (int j = 1; j < 1 + N/2; j++) {\n            tmp = texture (samplers[j], texCoord[1]);\n            values[2 * j - 2] = tmp.xy;\n            values[2 * j - 1] = tmp.zw;\n        }\n    } else if (barycentric == vec3 (0.0, 0.0, 1.0)) {\n        tmp = texture (samplers[0], texCoord[2]);\n        position = tmp.xy;\n        delta = tmp.z;\n        subdivisionFlag = tmp.w;\n        for (int j = 1; j < 1 + N/2; j++) {\n            tmp = texture (samplers[j], texCoord[2]);\n            values[2 * j - 2] = tmp.xy;\n            values[2 * j - 1] = tmp.zw;\n        }\n    } else {\n        position = barycentric.x * texture (samplers[0], texCoord[0]).xy\n                 + barycentric.y * texture (samplers[0], texCoord[1]).xy\n                 + barycentric.z * texture (samplers[0], texCoord[2]).xy;\n        vec2 cs[N+1];\n        f (position, cs);\n        roots (sheets, cs, values);\n        delta = Delta (position, values);\n        subdivisionFlag = 1.0;\n    }\n}\n",
"SubdivisionPre.vert":"#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\nin float index;\nuniform sampler2D samplers[1 + N/2];\nout vec2 position;\nout float delta;\nout float subdivisionFlag;\nout vec2 values[N];\n\n#define W 2048.0\n#define H 2048.0\nvec2 uvPosition (in float i) {\n    return vec2 (mod (i, W) / W + 0.5 / W, floor (i / W) / H + 0.5 / H);\n}\n\nvoid main (void) {\n    float which = mod (index, 3.0);\n    vec2 texCoordWhich = uvPosition (index);\n    vec2 texCoord[3];\n    texCoord[0] = uvPosition (index - which);\n    texCoord[1] = uvPosition (index - which + 1.0);\n    texCoord[2] = uvPosition (index - which + 2.0);\n    vec4 s = texture (samplers[0], texCoordWhich);\n    position = s.xy;\n    delta = s.z;\n    subdivisionFlag = 0.0;\n    vec3 positionDelta[3];\n    positionDelta[0] = texture (samplers[0], texCoord[0]).xyz;\n    positionDelta[1] = texture (samplers[0], texCoord[1]).xyz;\n    positionDelta[2] = texture (samplers[0], texCoord[2]).xyz;\n    if (distance (positionDelta[0].xy, positionDelta[1].xy) >= min (positionDelta[0].z, positionDelta[1].z))\n        subdivisionFlag += 4.0;\n    if (distance (positionDelta[1].xy, positionDelta[2].xy) >= min (positionDelta[1].z, positionDelta[2].z))\n        subdivisionFlag += 2.0;\n    if (distance (positionDelta[2].xy, positionDelta[0].xy) >= min (positionDelta[2].z, positionDelta[0].z))\n        subdivisionFlag += 1.0;\n    if (subdivisionFlag == 3.0 && distance (positionDelta[0].xy, 0.5 * (positionDelta[1].xy + positionDelta[2].xy)) < distance (positionDelta[1].xy, 0.5 * (positionDelta[0].xy + positionDelta[2].xy)))\n        subdivisionFlag = 8.0;\n    if (subdivisionFlag == 5.0 && distance (positionDelta[1].xy, 0.5 * (positionDelta[0].xy + positionDelta[2].xy)) < distance (positionDelta[2].xy, 0.5 * (positionDelta[0].xy + positionDelta[1].xy)))\n        subdivisionFlag = 9.0;\n    if (subdivisionFlag == 6.0 && distance (positionDelta[2].xy, 0.5 * (positionDelta[0].xy + positionDelta[1].xy)) < distance (positionDelta[0].xy, 0.5 * (positionDelta[1].xy + positionDelta[2].xy)))\n        subdivisionFlag = 10.0;\n    for (int i = 1; i < N/2; i++) {\n        s = texture (samplers[i], texCoordWhich);\n        values[2*i-2] = s.xy;\n        values[2*i-1] = s.zw;\n    }\n}\n",
"Surface.frag":"#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\nuniform bool clipping;\nin vec4 vPos;\nin vec2 v_value;\nout vec4 fColor;\nvec3 hue_to_rgb (in float hue)\n{\n    hue = mod (degrees (hue), 360.0) / 60.0;\n    int h = int (floor (hue));\n    float f = fract (hue);\n    if (h == 0)\n        return vec3 (1.0, f, 0.0);\n    else if (h == 1)\n        return vec3 (1.0 - f, 1.0, 0.0);\n    else if (h == 2)\n        return vec3 (0.0, 1.0, f);\n    else if (h == 3)\n        return vec3 (0.0, 1.0 - f, 1.0);\n    else if (h == 4)\n        return vec3 (f, 0.0, 1.0);\n    else if (h == 5)\n        return vec3 (1.0, 0.0, 1.0 - f);\n}\nfloat sawfct (float x, float dx, float a, float b)\n{\n    return a + (b - a) * fract (x / dx);\n}\nvoid main (void)\n{\n    if (clipping && vPos.y < 0.0)\n        discard;\n    float PI = acos (-1.0);\n    float angle = atan (v_value.y, v_value.x);\n    float blackp = sawfct (angle, PI / 12.0, 0.7, 1.0);\n    float blackm = sawfct (log (length (v_value)), PI / 12.0, 0.7, 1.0);\n    float black = blackp * blackm;\n    fColor = vec4 (black * hue_to_rgb (angle), gl_FragCoord.z);\n}\n",
"Surface.vert":"#version 300 es\n#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\nuniform mat4 m;\nuniform mat4 v;\nuniform mat4 p;\nin vec4 posValue;\nout vec4 vPos;\nout vec2 v_value;\nvoid main (void)\n{\n    vPos = vec4 (posValue.xyz, 1.0);\n    v_value = posValue.zw;\n    gl_Position = p * v * m * vPos;\n}\n"};function ba(a,b){var c=[r("Assembly.vert"),r("Dummy.frag")];c[0]=t(b,c[0]);this.f=u(a,c,["posValue"])}ba.prototype.f=null;
ba.prototype.o=function(a,b,c){var d=b.D;c.useProgram(this.f);var e=b.l;c.uniform1f(c.getUniformLocation(this.f,"numIndices"),e);ca(b,a);c.vertexAttribPointer(0,1,c.FLOAT,!1,0,0);var f=b.F;a=4*e*f;for(var g=[],h=0,k=d.length;h<k;h++)c.activeTexture(c.TEXTURE0+h),c.bindTexture(c.TEXTURE_2D,d[h]),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MAG_FILTER,c.NEAREST),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MIN_FILTER,c.NEAREST),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_S,c.CLAMP_TO_EDGE),c.texParameteri(c.TEXTURE_2D,
c.TEXTURE_WRAP_T,c.CLAMP_TO_EDGE),g[h]=h;c.uniform1iv(c.getUniformLocation(this.f,"samplers"),g);c.disable(c.DEPTH_TEST);var m=c.getUniformLocation(this.f,"sheet");v(c,b,a,function(){for(var a=0;a<f;a++)c.uniform1f(m,a),c.drawArrays(c.TRIANGLES,0,e)});b.l*=f;c.enable(c.DEPTH_TEST)};function da(a,b,c,d){d=d?d:function(){};var e=this;e.oa=c?c:null;ea(e,b,function(){var c=e.ja,b=a.j;e.ba=c.byteLength/16;b.enableVertexAttribArray(0);e.S=b.createBuffer();b.bindBuffer(b.ARRAY_BUFFER,e.S);b.bufferData(b.ARRAY_BUFFER,new Float32Array(c),b.STATIC_DRAW);e.P=u(a,fa("CachedSurface"));d()})}l=da.prototype;l.na="";function ea(a,b,c){a.na=b;var d=new XMLHttpRequest;d.open("GET",b,!0);d.responseType="arraybuffer";d.onload=function(){a.ja=d.response;c()};d.send()}l.oa=null;l.ja=null;l.S=null;
l.P=null;l.o=function(a,b,c){this.P&&(b.useProgram(this.P),ga(a),w(a,"m",ha(c.u)),ia(a,c),ja(a,c),y(a),b.bindBuffer(b.ARRAY_BUFFER,this.S),b.vertexAttribPointer(0,4,b.FLOAT,!1,0,0),b.clear(b.COLOR_BUFFER_BIT|b.DEPTH_BUFFER_BIT),b.drawArrays(b.TRIANGLES,0,this.ba),y(a,!1))};l.ba=0;function A(a,b){this.f=a;this.g=b}A.prototype.abs=function(){return Math.sqrt(this.f*this.f+this.g*this.g)};function B(a,b){return new A(a.f+b.f,a.g+b.g)}function C(a,b){var c=b.f*b.f+b.g*b.g;return new A((a.f*b.f+a.g*b.g)/c,(a.g*b.f-a.f*b.g)/c)}A.prototype.g=0;var ka=new A(Infinity,Infinity);function D(a,b){return new A(a.f*b.f-a.g*b.g,a.f*b.g+a.g*b.f)}function E(a){return new A(-a.f,-a.g)}var la=new A(1,0);A.prototype.f=0;function F(a){return new A(a,0)}
function ma(a){if(!a.f&&!a.g)return G();var b=a.abs();return new A(Math.sqrt(.5*(b+a.f)),(Math.sign(a.g)||1)*Math.sqrt(.5*(b-a.f)))}function H(a,b){return new A(a.f-b.f,a.g-b.g)}function G(){return new A(0,0)};function I(a){if(null===a)return null;var b=a.type,c=a.value;if("infix"===b){b=I(a.first);a=I(a.second);if("+"===c)return na(b,a);if("-"===c)return na(b,oa(a));if("*"===c)return pa(b,a);if("^"===c){if(qa(a)&&(c=ra(a),0<=c.f&&!c.g))return sa(b,c.f);console.error("Illegal exponent")}else console.error("Infix operator '"+c+"' not implemented")}else if("prefix"===b){b=I(a.first);if("+"===c)return b;if("-"===c)return oa(b);console.error("Prefix operator '"+c+"' not implemented")}else{if("number"===b)return new J([new K(F(parseFloat(c)),
new L({}))]);if("variable"===b)return b={},b[c]=1,new J([new K(la,new L(b))]);if("imaginary"===b)return new J([new K(new A(0,1),new L({}))])}return null}
function ta(a){function b(a,c){function b(a,c){return{type:"infix",value:c[0].value,first:a,second:c[1]}}return c===[]?a:c.reduce(b,a)}function c(a){a=M(ua(va(m,d),d),wa(M(m,d)))(a);return null===a?null:b(a[0],a[1])}function d(a){a=M(e,wa(M(p,e)))(a);return null===a?null:b(a[0],a[1])}function e(a){var b=ua(xa(c),g,h,k)(a);return null===b?null:(a=f(a))?{type:"infix",value:"^",first:b,second:a}:b}function f(a){var c=M(n,g)(a);return null===c?null:(a=f(a))?{type:"infix",value:"^",first:c[1],second:a}:
c[1]}a=ya(a);var g=za("number"),h=za("imaginary"),k=za("variable"),m=ua(N("+"),N("-")),p=N("*"),n=N("^");return function(a){return(a=M(c,Aa)(a))?a[0]:null}(a)};var O=5/12*Math.PI,P=Math.PI/6;function Ba(a,b,c,d,e){b=void 0===b?O:b;c=void 0===c?P:c;this.f=a;b=Q(b,c);c=new Ca;c.K=void 0===d?!1:d;c.u=c.N=c.v=b;this.s=c;this.A=new Da(a,void 0===e?"webgl2":e);Ea(this)}function Fa(a,b,c){var d,e,f;d=void 0===d?O:d;e=void 0===e?P:e;f=void 0===f?!1:f;b=I(ta(b));d=void 0===d?O:d;e=void 0===e?P:e;a=new Ba(a,d,e,void 0===f?!1:f);f=a.A;f.L=new Ga(f,b,c);2!==R(b).length||2>f.L.F?c=null:(a.m(),c=a);return c}
function Ha(a,b,c){var d=void 0,e=void 0,f=void 0,d=void 0===d?O:d,e=void 0===e?P:e,f=void 0===f?!1:f;c=c?c:function(){};var g=I(ta("")),h=new Ba(a,d,e,f,"webgl");a=h.A;a.L=new da(a,b,g,function(){h.m();c()});return h}
function Ea(a){var b=a.f,c=a.s;a.g=function(b){b.preventDefault();c.w||(Ia(c,[b.clientX,b.clientY]),a.m())};a.h=function(a){a.preventDefault();Ja(c,a.clientX,a.clientY)};a.i=function(a){a.preventDefault();c.J=[0,0];c.C=!1};a.ha=function(b){b.preventDefault();b=b.touches[0];Ia(c,[b.clientX,b.clientY]);a.m()};a.I=function(a){a.preventDefault();a=a.touches[0];Ja(c,a.clientX,a.clientY)};a.H=function(a){a.preventDefault();c.J=[0,0];c.C=!1};a.ia=function(b){b.preventDefault();c.B=0<b.deltaY?Math.min(4,
c.B+.1):Math.max(.5,c.B-.1);a.m()};b.addEventListener("mousedown",a.g);b.addEventListener("mousemove",a.h);b.addEventListener("mouseup",a.i);b.addEventListener("touchstart",a.ha);b.addEventListener("touchmove",a.I);b.addEventListener("touchend",a.H);b.addEventListener("wheel",a.ia)}l=Ba.prototype;l.m=function(){var a=this.s,b=this;this.A.m(a);if(a.w||a.C||1E-6<Ka(a.u,a.v).abs())La(a),requestAnimationFrame(function(){b.m()})};function S(a,b,c){a.s.w=!1;a.s.v=a.s.N=a.s.u;a.s.v=Q(b,c);a.m()}
l.Y=function(a){this.s.Y(a);this.m()};l.Z=function(a){this.A.Z(a);this.m()};l.$=function(a){this.s.$(a);this.m()};l.aa=function(a){this.A.aa(a);this.m()};l.ma=function(){var a=this.f;a.removeEventListener("mousedown",this.g);a.removeEventListener("mousemove",this.h);a.removeEventListener("mouseup",this.i);a.removeEventListener("touchstart",this.ha);a.removeEventListener("touchmove",this.I);a.removeEventListener("touchend",this.H);a.removeEventListener("wheel",this.ia)};function T(a){var b=[],c,d;if(qa(a))return[U(ra(a))];if(1===R(a).length)for(a=Ma(a),c=0,d=a.length;c<d;c++)b[c]=U(a[c]);else if(2===R(a).length){c=R(a);var e=c[0];a=V(a,c[1]);c=0;for(d=a.length;c<d;c++)b[c]=W(e,T(a[c]))}return b}function U(a){return"vec2 ("+a.f.toPrecision(8)+", "+a.g.toPrecision(8)+")"}
function Na(a,b){a=T(a).reverse();for(var c=X-a.length+1,d=U(G()),e=0;e<c;e++)a.push(d);b=["void f (in vec2 "+b+", out vec2 cs[N+1])","{"];for(c=0;c<=X;c++)b.push("cs["+c+"] = "+a[c]+";");b.push("}");return b.join("\n")}function Oa(a,b,c){a=V(Pa(a,b),c);for(var d=[],e=0,f=a.length;e<f;e++)d[e]=W(b,T(a[e]));return["vec2 fx (in vec2 "+b+", in vec2 "+c+")","{","    return "+W(c,d)+";","}"].join("\n")}
function Qa(a,b,c){a=V(Pa(a,c),b);for(var d=[],e=0,f=a.length;e<f;e++)d[e]=W(c,T(a[e]));return["vec2 fy (in vec2 "+b+", in vec2 "+c+")","{","    return "+W(b,d)+";","}"].join("\n")}function W(a,b){for(var c=b[0],d=1,e=b.length;d<e;d++)c="vec2 (1.0000000, 0.0000000)"===c?a:"vec2 (-1.0000000, 0.0000000)"===c?"-"+a:"cm ("+a+","+c+")","vec2 (0.0000000, 0.0000000)"!==b[d]&&(c+="+"+b[d]);return c}
function Ra(a,b,c){var d,e,f,g,h=V(a,c);d=0;for(f=h.length;d<f;d++){var k=h[d].f;e=0;for(g=k.length;e<g;e++){var m=k[e];k[e]=new K(F(m.g.abs()),m.f)}h[d]=new J(k)}d=h[0];d=Sa(d,b,Y(d,b));a=Sa(a,c,Y(a,c));a=Ta(Ma(a));c=["float M (in vec2 "+b+", in float rho)","{","    vec2 r = vec2 (length ("+b+") + rho, 0.0);","    float a["+h.length+"];","    a[0] = length ("+U(ra(d))+");"];d=0;for(f=a.length;d<f;d++)c.push("    a[0] *= distance ("+b+", "+U(a[d])+") - rho;");d=1;for(f=h.length;d<f;d++)c.push("    a["+
d+"] = length ("+W("r",T(h[d]))+");");c=c.concat(["    float m = a[1] / a[0];","    for (int j = 2; j < "+h.length+"; j++) {","        m = max (m, pow (a[j] / a[0], 1.0 / float (j)));","    }","    return 2.0 * m;","}"]);return c.join("\n")}
function Ua(a,b,c){var d=Sa(a,c,Y(a,c)),e=Pa(a,c);c=Va(c,a,e);e=c.f;(a=e.length)||console.error("matrix must be non-empty");for(var f=0;f<a;f++)e[f].length!==a&&console.error("matrix must be square");f=c;for(e=1;e<a;e++){for(var f=f.f,g=f[0][0].g(),h=[],k=0,m=f.length;k<m;k++){h[k]=[];for(var p=0;p<m;p++)if(p<k)h[k][p]=g;else if(p===k){for(var n=g,q=p+1;q<m;q++)var x=oa(f[q][q]),n=na(n,x);h[k][p]=n}else h[k][p]=f[k][p]}f=(new Wa(h)).f;g=c.f;f[0].length!==g.length&&console.error("matrix dimensions must match");
h=[];k=f.length;m=g[0].length;p=f[0][0].g();for(n=0;n<k;n++)for(h[n]=[],q=0;q<m;q++){for(var x=p,z=0,$a=f[0].length;z<$a;z++)var ab=pa(f[n][z],g[z][q]),x=na(x,ab);h[n][q]=x}f=new Wa(h)}c=f.f[0][0];a=a%2?c:oa(c);d=Ta(Ma(d));f=Ta(Ma(a));e=[];a=0;for(c=d.length;a<c;a++)isFinite(d[a].abs())&&e.push(d[a]);a=0;for(c=f.length;a<c;a++)isFinite(f[a].abs())&&e.push(f[a]);d=["float rho (in vec2 "+b+") {","    float d = 100.0;"];a=0;for(c=e.length;a<c;a++)d.push("    d = min (d, distance ("+b+", "+U(e[a])+"));");
d=d.concat(["    return 0.999 * d;","}"]);return d.join("\n")}var X=8;function Xa(a,b){var c=Ya(),d=a.j;b.l=c.length/2;d.enableVertexAttribArray(0);this.f=d.createBuffer();d.bindBuffer(d.ARRAY_BUFFER,this.f);d.bufferData(d.ARRAY_BUFFER,new Float32Array(c),d.STATIC_DRAW);c=[r("Initial.vert"),r("Dummy.frag")];c[0]=t(b,c[0]);this.g=u(a,c,["position","delta","subdivisionFlag","values"])}Xa.prototype.f=null;Xa.prototype.g=null;
Xa.prototype.o=function(a,b,c){c.useProgram(this.g);a=(4+2*X)*b.l;c.enableVertexAttribArray(0);c.bindBuffer(c.ARRAY_BUFFER,this.f);c.vertexAttribPointer(0,2,c.FLOAT,!1,0,0);v(c,b,a,function(){c.drawArrays(c.TRIANGLES,0,b.l)});Za(c,b);c.bindBuffer(c.ARRAY_BUFFER,null)};function Wa(a){this.f=a}Wa.prototype.f=null;function Ya(){for(var a=[],b=-10;10>b;b++)for(var c=-10;10>c;c++)a=(b+c)%2?a.concat([b,c,b+1,c+1,b,c+1,b,c,b+1,c,b+1,c+1]):a.concat([b,c,b+1,c,b,c+1,b+1,c,b+1,c+1,b,c+1]);return a.map(function(a){return a/2})};function bb(a,b,c){return a+c*(b-a)};function L(a){this.value=a}function cb(a){var b={};a=a.value;for(var c in a)b[c]=a[c];return new L(b)};function M(a){var b=arguments;return function(a){for(var d,e=[],f=0,g=b.length;f<g;f++)if(d=(0,b[f])(a))e.push(d);else return Array.prototype.unshift.apply(a,e),null;return e}}function xa(a){var b=N("("),c=N(")");return function(d){return(d=M(b,a,c)(d))?d[1]:null}}function Aa(a){return a.length?null:!0}function za(a){return function(b){return(b[0]||{}).type===a?b.shift():null}}function wa(a){return function(b){for(var c=a(b),d=[];null!==c;)d.push(c),c=a(b);return d}}
function ua(a){var b=arguments;return function(a){for(var d,e=0,f=b.length;e<f;e++)if(d=(0,b[e])(a))return d;return null}}function va(a,b){return function(c){c=M(a,b)(c);return null===c?null:{type:"prefix",value:c[0].value,first:c[1]}}}function N(a){return function(b){return(b[0]||{}).value===a?b.shift():null}};function J(a){a.length?this.f=db(a):this.f=[new K(G(),new L({}))]}function na(a,b){return new J(db(a.f.concat(b.f)))}function Sa(a,b,c){a=a.f;for(var d=[],e=0,f=a.length;e<f;e++){var g=a[e];if((g.f.value[b]||0)===c){var h=cb(g.f);delete h.value[b];d.push(new K(g.g,h))}}return new J(d)}function V(a,b){for(var c=Y(a,b),d=[],e=0;e<=c;e++)d[e]=Sa(a,b,c-e);return d}
function Ma(a){var b=R(a),c=b.length;1<c&&console.error("Polynomial is not univariate");a=V(a,0<c?b[0]:"x");for(var b=[],c=0,d=a.length;c<d;c++)b[c]=ra(a[c]);return b}function ra(a){var b=G();a=a.f;for(var c=0,d=a.length;c<d;c++){var e=a[c],f=e.f.value;f&&Object.keys(f).length||(b=B(b,e.g))}return b}function Y(a,b){var c=0;a=a.f;for(var d=0,e=a.length;d<e;d++)c=Math.max(c,a[d].f.value[b]||0);return c}
function Pa(a,b){a=a.f;for(var c=[],d=0,e=a.length;d<e;d++){var f=a[d].f,g=f.value[b]||0;if(0<g){var h=D(a[d].g,F(g)),f=cb(f);f.value[b]=g-1;c.push(new K(h,f))}}return new J(c)}function qa(a){return!R(a).length&&!!a.f.length}
function eb(a,b,c){for(var d=a.length-1,e=[1,.3141,.5926,.5358,.9793,.2385,.6264,.3383,.2795,.0288],f,g,h,k,m=1;m<=c;m++){h=G();f=G();g=a[0];for(k=1;k<=d;k++)h=B(f,D(h,b)),f=B(g,D(f,b)),g=B(a[k],D(g,b));if(1E-14>g.abs())break;f=C(f,g);k=D(f,f);g=H(k,C(D(F(2),h),g));h=ma(D(F(d-1),H(D(F(d),g),k)));g=B(f,h);f=H(f,h);g.abs()<f.abs()&&(g=f);f=1E-14<g.abs()?C(F(d),g):D(F(b.abs()+1),new A(Math.cos(m),Math.sin(m)));if(1E-14>f.abs())break;!(m%20)&&m<c-19&&(f=D(f,F(e[Math.floor(m/20)])));b=H(b,f)}return b}
function pa(a,b){a=a.f;b=b.f;for(var c=[],d=0,e=a.length;d<e;d++)for(var f=0,g=b.length;f<g;f++){var h=a[d],k=b[f],m={},p=h.f.value,n=k.f.value,q=void 0;for(q in p)m[q]=p[q]+(n[q]||0);for(q in n)m[q]=n[q]+(p[q]||0);c.push(new K(D(h.g,k.g),new L(m)))}return new J(db(c))}function oa(a){a=a.f;for(var b=[],c=0,d=a.length;c<d;c++){var e=a[c];b.push(new K(E(e.g),e.f))}return new J(b)}
function sa(a,b){var c=new J([new K(F(1),new L({}))]);for(Number.isInteger(b)||console.error("Non-integer power of Polynomial!");0<b;b--)c=pa(c,a);return c}J.prototype.pow=function(a){return sa(this,a)};function fb(a){var b=a[0],c=a[1];a=a[2];if(!a.f&&!a.g)return[G(),E(C(c,b))];var d=ma(H(D(c,c),D(F(4),D(b,a))));0<=c.f&&(d=E(d));return[C(H(d,c),D(F(2),b)),C(D(F(2),a),H(d,c))]}
function Ta(a){var b=[],c=a,d=a.length-1;if(0>=d)return[];var e=a[0];if(!e.f&&!e.g)return b=Ta(a.slice(1)),b.push(ka),b;if(1===d)b[0]=E(C(a[1],a[0]));else if(2===d)b=fb(a);else{for(e=0;e<d-2;e++){b[e]=eb(a,G(),200);b[e]=eb(c,b[e],1);for(var f=b[e],g=[a[0]],h=1,k=a.length-1;h<k;h++)g[h]=B(a[h],D(g[h-1],f));a=g}c=fb(a);b[d-2]=c[0];b[d-1]=c[1]}return b}
function Va(a,b,c){function d(a){for(var b=[],c=0;c<a;c++)b[c]=gb();return b}function e(a,b){return d(b).concat(a).concat(d(f+g-a.length-b))}var f=Y(b,a),g=Y(c,a);b=V(b,a);a=V(c,a);c=[];for(var h=0;h<g;h++)c.push(e(b,h));for(b=0;b<f;b++)c.push(e(a,b));return new Wa(c)}J.prototype.f=null;function R(a){a=a.f;for(var b=[],c={},d=0,e=a.length;d<e;d++){var f=a[d].f.value,g;for(g in f)c[g]||(b.push(g),c[g]=!0)}b.sort();return b}function gb(){return new J([])}J.prototype.g=gb;function Z(a,b,c,d){this.i=a;this.f=b;this.g=c;this.h=d}Z.prototype.abs=function(){return Math.sqrt(this.i*this.i+this.f*this.f+this.g*this.g+this.h*this.h)};function Q(a,b){a=-a/2;b=-b/2;return hb(new Z(Math.cos(a),Math.sin(a),0,0),new Z(Math.cos(b),0,0,Math.sin(b)))}function ib(a,b,c){return new Z(bb(a.i,b.i,c),bb(a.f,b.f,c),bb(a.g,b.g,c),bb(a.h,b.h,c))}
function hb(a,b){return new Z(a.i*b.i-a.f*b.f-a.g*b.g-a.h*b.h,a.i*b.f+a.f*b.i+a.g*b.h-a.h*b.g,a.i*b.g-a.f*b.h+a.g*b.i+a.h*b.f,a.i*b.h+a.f*b.g-a.g*b.f+a.h*b.i)}function jb(a){var b=a.abs();return new Z(a.i/b,a.f/b,a.g/b,a.h/b)}function ha(a){var b=a.i,c=a.f,d=a.g;a=a.h;return[b*b+c*c-d*d-a*a,2*c*d+2*b*a,2*c*a-2*b*d,0,2*c*d-2*b*a,b*b-c*c+d*d-a*a,2*d*a+2*b*c,0,2*c*a+2*b*d,2*d*a-2*b*c,b*b-c*c-d*d+a*a,0,0,0,0,b*b+c*c+d*d+a*a]}function Ka(a,b){return new Z(a.i-b.i,a.f-b.f,a.g-b.g,a.h-b.h)};function Ca(){}l=Ca.prototype;l.w=!1;l.J=[0,0];l.K=!1;l.C=!1;l.u=Q(0,0);l.N=Q(0,0);l.v=Q(0,0);l.B=1;function Ia(a,b){a.w||(a.J=b,a.C=!0,a.N=a.v)}function Ja(a,b,c){if(a.C){var d=a.J;b-=d[0];c=d[1]-c;var d=Math.sqrt(b*b+c*c),e=a.N,f=d/Math.sqrt(1E4+d*d);a.v=jb(ib(e,hb(new Z(100/Math.sqrt(1E4+d*d),-f*c,f*b,0),e),.05))}}l.Y=function(a){this.w=a};l.$=function(a){this.K=a};function La(a){if(a.w){var b=jb(new Z(.01,0,0,1)),b=hb(b,b);a.u=a.v=hb(a.u,b)}else a.u=jb(ib(a.u,a.v,.1))};function Da(a,b){this.fa=b=void 0===b?"webgl2":b;if("webgl"===b){if(a=this.j=a.getContext("webgl",{preserveDrawingBuffer:!0}),!a)throw alert("WebGL not supported. Please try another browser or platform."),Error("WebGL not supported.");}else if(a=this.j=a.getContext("webgl2",{preserveDrawingBuffer:!0}),!a)throw alert("WebGL 2 not supported. Please try another browser or platform."),Error("WebGL 2 not supported.");a.enable(a.DEPTH_TEST);this.G=u(this,fa("FXAA"));a=this.j;b=Math.min(a.getParameter(a.MAX_TEXTURE_SIZE),
8192);this.T=a.createBuffer();a.bindBuffer(a.ARRAY_BUFFER,this.T);a.bufferData(a.ARRAY_BUFFER,new Float32Array([-1,-1,3,-1,-1,3]),a.STATIC_DRAW);a.vertexAttribPointer(0,2,a.FLOAT,!1,0,0);a.enableVertexAttribArray(0);this.ka=a.createFramebuffer();a.bindFramebuffer(a.FRAMEBUFFER,this.ka);this.U=a.createRenderbuffer();a.bindRenderbuffer(a.RENDERBUFFER,this.U);a.renderbufferStorage(a.RENDERBUFFER,a.DEPTH_COMPONENT16,b,b);a.framebufferRenderbuffer(a.FRAMEBUFFER,a.DEPTH_ATTACHMENT,a.RENDERBUFFER,this.U);
this.V=a.createTexture();a.bindTexture(a.TEXTURE_2D,this.V);a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MAG_FILTER,a.NEAREST);a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MIN_FILTER,a.NEAREST);a.texImage2D(a.TEXTURE_2D,0,a.RGBA,b,b,0,a.RGBA,a.UNSIGNED_BYTE,null);a.framebufferTexture2D(a.FRAMEBUFFER,a.COLOR_ATTACHMENT0,a.TEXTURE_2D,this.V,0);this.W=a.createFramebuffer();a.bindFramebuffer(a.FRAMEBUFFER,this.W);this.X=a.createRenderbuffer();a.bindRenderbuffer(a.RENDERBUFFER,this.X);a.renderbufferStorage(a.RENDERBUFFER,
a.DEPTH_COMPONENT16,2048,2048);a.framebufferRenderbuffer(a.FRAMEBUFFER,a.DEPTH_ATTACHMENT,a.RENDERBUFFER,this.X);this.M=a.createTexture();a.bindTexture(a.TEXTURE_2D,this.M);a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MAG_FILTER,a.NEAREST);a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MIN_FILTER,a.NEAREST);a.texImage2D(a.TEXTURE_2D,0,a.RGBA,2048,2048,0,a.RGBA,a.UNSIGNED_BYTE,null);a.framebufferTexture2D(a.FRAMEBUFFER,a.COLOR_ATTACHMENT0,a.TEXTURE_2D,this.M,0);a.bindTexture(a.TEXTURE_2D,null);a.bindRenderbuffer(a.RENDERBUFFER,
null);a.bindFramebuffer(a.FRAMEBUFFER,null);a.bindBuffer(a.ARRAY_BUFFER,null)}l=Da.prototype;l.da=!1;l.fa="webgl2";l.G=null;function r(a){return aa[a].trim()}function fa(a){return[r(a+".vert"),r(a+".frag")]}l.j=null;
function u(a,b,c){var d=a.j,e=b[1],f=d.createShader(d.VERTEX_SHADER);d.shaderSource(f,b[0]);d.compileShader(f);d.getShaderParameter(f,d.COMPILE_STATUS)||console.log(d.getShaderInfoLog(f));var g=d.createProgram();d.attachShader(g,f);b[1]&&(b=d.createShader(d.FRAGMENT_SHADER),d.shaderSource(b,e),d.compileShader(b),d.getShaderParameter(b,d.COMPILE_STATUS)||console.log(d.getShaderInfoLog(b)),d.attachShader(g,b));c?(d.transformFeedbackVaryings(g,c,d.INTERLEAVED_ATTRIBS),d.enable(d.RASTERIZER_DISCARD)):
"webgl2"===a.fa&&d.disable(d.RASTERIZER_DISCARD);d.linkProgram(g);d.getProgramParameter(g,d.LINK_STATUS)||console.log(d.getProgramInfoLog(g));d.useProgram(g);return g}l.L=null;l.m=function(a){var b=this.j,c=this;kb(this,function(){c.L.o(c,b,a)})};l.T=null;l.ka=null;l.U=null;l.V=null;l.W=null;l.X=null;l.M=null;l.Z=function(a){this.da=a};l.aa=function(a){this.la=a};l.la=!1;function ga(a){var b=a.j;b.uniform1f(b.getUniformLocation(b.getParameter(b.CURRENT_PROGRAM),"clipping"),a.da?1:0)}
function ja(a,b){var c=a.j,d=c.getParameter(c.VIEWPORT),c=d[2],d=d[3];if(b.K){var e=b.B;b=-7.5*e;var f=-7.5*e,g=7.5*e,e=7.5*e,h=Math.min(d/c,1),c=Math.min(c/d,1),c=[2*h/(g-f),0,0,0,0,2*c/(e-b),0,0,0,0,-.01,0,-h*(g+f)/(g-f),-c*(e+b)/(e-b),-0,1]}else b=1/Math.tan(45*b.B/2*Math.PI/180),c=[b/(0<d?c/d:c),0,0,0,0,b,0,0,0,0,101/-99,-1,0,0,200/-99,0];w(a,"p",c)}
function y(a,b){var c=a.j;a.la&&!1!==b?(c.blendFunc(c.SRC_ALPHA,c.ONE),c.enable(c.BLEND),c.disable(c.DEPTH_TEST)):(c.disable(c.BLEND),c.enable(c.DEPTH_TEST),c.depthFunc(c.LESS))}function w(a,b,c){a=a.j;a.uniformMatrix4fv(a.getUniformLocation(a.getParameter(a.CURRENT_PROGRAM),b),!1,c)}function ia(a,b){w(a,"v",b.K?[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]:[1,0,0,0,0,1,0,0,0,0,1,0,0,0,-20,1])}
function kb(a,b){if(a.G){if(a.G){var c=a.j;c.bindFramebuffer(c.FRAMEBUFFER,a.W);c.viewport(0,0,2048,2048);b();c.viewport(0,0,c.canvas.width,c.canvas.height);c.bindFramebuffer(c.FRAMEBUFFER,null);b=a.j;c=a.G;b.useProgram(c);var d=b.getUniformLocation(c,"width");b.uniform1f(d,b.canvas.width);d=b.getUniformLocation(c,"height");b.uniform1f(d,b.canvas.height);b.bindBuffer(b.ARRAY_BUFFER,a.T);b.vertexAttribPointer(0,2,b.FLOAT,!1,0,0);b.activeTexture(b.TEXTURE0);b.bindTexture(b.TEXTURE_2D,a.M);b.clear(b.COLOR_BUFFER_BIT|
b.DEPTH_BUFFER_BIT);b.drawArrays(b.TRIANGLES,0,3)}}else b()};function lb(a,b){var c=[r("Subdivision.vert"),r("Dummy.frag")];c[0]=t(b,c[0]);this.f=u(a,c,["position","delta","subdivisionFlag","values"])}lb.prototype.f=null;
lb.prototype.o=function(a,b,c){var d,e=b.D,f=this.f;c.useProgram(f);var g=new Float32Array(b.l),h=mb(c,b),k=4+2*X,m=k*b.l;a=3;for(d=0;a<m;a+=k,d++)g[d]=h[a];var m=[1,0,0,0,1,0,0,0,1,1,0,0,0,1,0,.5,0,.5,0,1,0,0,0,1,.5,0,.5,1,0,0,0,1,0,0,.5,.5,0,.5,.5,0,0,1,1,0,0,1,0,0,0,1,0,.5,0,.5,0,.5,.5,0,0,1,.5,0,.5,.5,0,.5,0,1,0,0,.5,.5,1,0,0,.5,.5,0,0,0,1,0,0,1,.5,.5,0,0,1,0,1,0,0,.5,.5,0,.5,0,.5,.5,0,.5,.5,.5,0,0,0,1,0,1,0,0,0,1,.5,.5,0,1,0,0,.5,.5,0,0,.5,.5,0,0,1,1,0,0,0,.5,.5,0,.5,.5,.5,.5,0,0,1,0,1,0,0,.5,
.5,0,.5,0,.5,.5,.5,0,0,1,0,0,.5,.5,0,.5,.5,0,0,1,.5,0,.5,.5,.5,0,0,.5,.5,.5,0,.5,1,0,0,0,1,0,0,.5,.5,0,.5,.5,.5,0,.5,1,0,0,.5,0,.5,0,.5,.5,0,0,1,1,0,0,.5,.5,0,.5,0,.5,.5,0,.5,.5,.5,0,0,1,0,0,1,0,0,0,1,.5,0,.5,1,0,0,.5,.5,0,0,0,1,0,0,1,.5,.5,0,0,.5,.5,0,.5,.5,.5,.5,0,0,1,0],h=[0,3,9,15,24,30,39,48,60,69,78],p=[3,6,6,9,6,9,9,12,9,9,9],n=[];a=0;for(d=e.length;a<d;a++)c.activeTexture(c.TEXTURE0+a),c.bindTexture(c.TEXTURE_2D,e[a]),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MAG_FILTER,c.NEAREST),c.texParameteri(c.TEXTURE_2D,
c.TEXTURE_MIN_FILTER,c.NEAREST),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_S,c.CLAMP_TO_EDGE),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_T,c.CLAMP_TO_EDGE),n[a]=a;c.uniform1iv(c.getUniformLocation(f,"samplers"),n);var f=[],n=[],q=0;a=0;for(d=b.l/3;a<d;a++){var x=g[3*a],z=h[x],x=p[x];n.push(m.slice(3*z,3*(z+x)));for(z=0;z<x;z++)f.push(3*a);q+=x}n=Array.prototype.concat.apply([],n);m=k*q;g=c.createBuffer();c.enableVertexAttribArray(0);c.bindBuffer(c.ARRAY_BUFFER,g);c.bufferData(c.ARRAY_BUFFER,new Float32Array(n),
c.STATIC_DRAW);c.vertexAttribPointer(0,3,c.FLOAT,!1,0,0);k=c.createBuffer();c.enableVertexAttribArray(1);c.bindBuffer(c.ARRAY_BUFFER,k);c.bufferData(c.ARRAY_BUFFER,new Float32Array(f),c.STATIC_DRAW);c.vertexAttribPointer(1,1,c.FLOAT,!1,0,0);v(c,b,m,function(){c.drawArrays(c.TRIANGLES,0,q)});b.l=q;Za(c,b);a=0;for(d=e.length+1;a<d;a++)c.activeTexture(c.TEXTURE0+a),c.bindTexture(c.TEXTURE_2D,null);c.bindBuffer(c.ARRAY_BUFFER,null);c.deleteBuffer(k);c.deleteBuffer(g);c.disableVertexAttribArray(1)};function nb(a,b){var c=[r("SubdivisionPre.vert"),r("Dummy.frag")];c[0]=t(b,c[0]);this.f=u(a,c,["position","delta","subdivisionFlag","values"])}nb.prototype.f=null;
nb.prototype.o=function(a,b,c){var d=b.D,e=this.f;c.useProgram(e);ca(b,a);c.vertexAttribPointer(0,1,c.FLOAT,!1,0,0);a=(4+2*X)*b.l;for(var f=[],g=0,h=d.length;g<h;g++)c.activeTexture(c.TEXTURE0+g),c.bindTexture(c.TEXTURE_2D,d[g]),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MAG_FILTER,c.NEAREST),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MIN_FILTER,c.NEAREST),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_S,c.CLAMP_TO_EDGE),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_T,c.CLAMP_TO_EDGE),f[g]=g;c.uniform1iv(c.getUniformLocation(e,
"samplers"),f);v(c,b,a,function(){c.drawArrays(c.TRIANGLES,0,b.l)});Za(c,b);c.bindBuffer(c.ARRAY_BUFFER,null)};function Ga(a,b,c){this.g=c;c=R(b);this.F=Y(b,c.length?c[c.length-1]:"y");if(2===R(b).length)if(2>this.F)console.log("There must be at least two sheets!");else{c=a.j;this.ca=c.createBuffer();for(var d=a.j,e=[],f=0;5>f;f++)e[f]=d.createTexture(),d.bindTexture(d.TEXTURE_2D,e[f]),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MAG_FILTER,d.NEAREST),d.texParameteri(d.TEXTURE_2D,d.TEXTURE_MIN_FILTER,d.NEAREST),d.texImage2D(d.TEXTURE_2D,0,d.RGBA16F,2048,2048,0,d.RGBA,d.FLOAT,null);d.bindTexture(d.TEXTURE_2D,null);
this.D=e;d=a.j;this.f=d.createTransformFeedback();this.O=d.createBuffer();this.ea=aa["Common.glsl"].trim();e=R(b);d=2>e.length?"x":e[0];e=e.length?e[e.length-1]:"y";this.ga=[["#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif","const int N = "+X+";","const int sheets = "+Y(b,e)+";","\n/* complex multiplication */\nvec2 cm (in vec2 a, in vec2 b)\n{\n    return vec2 (a.x * b.x - a.y * b.y, a.x * b.y + a.y * b.x);\n}"].join("\n"),Na(b,d),Oa(b,d,e),Qa(b,
d,e),Ua(b,d,e),Ra(b,d,e)].join("\n\n");this.i=new Xa(a,this);this.i.o(a,this,c);this.I=new nb(a,this);this.H=new lb(a,this);for(b=0;b<this.g;b++)this.I.o(a,this,c),this.H.o(a,this,c);this.h=new ba(a,this);this.h.o(a,this,c);b=fa("Surface");b[1]=t(this,b[1]);this.R=u(a,b);a=c.canvas;c.viewport(0,0,a.width,a.height)}else console.log("Equation must be bivariate!")}l=Ga.prototype;l.ea="";l.ga="";
function ca(a,b){b=b.j;for(var c=[],d=0;d<a.l;d++)c[d]=d;b.bindBuffer(b.ARRAY_BUFFER,a.ca);b.bufferData(b.ARRAY_BUFFER,new Float32Array(c),b.STATIC_DRAW)}l.ca=null;l.l=0;l.R=null;l.o=function(a,b,c){this.R&&(b.useProgram(this.R),ga(a),w(a,"m",ha(c.u)),ia(a,c),ja(a,c),y(a),b.bindBuffer(b.ARRAY_BUFFER,this.O),b.vertexAttribPointer(0,4,b.FLOAT,!1,0,0),b.clear(b.COLOR_BUFFER_BIT|b.DEPTH_BUFFER_BIT),b.drawArrays(b.TRIANGLES,0,this.l),y(a,!1))};l.F=0;l.D=[];l.O=null;
function t(a,b){return["#version 300 es",a.ga,a.ea,b].join("\n")};function K(a,b){this.g=a;this.f=b}K.prototype.g=null;K.prototype.f=null;
function db(a){function b(a,d){if(d.length){if(1===d.length)return a.push(d[0]),a;for(var e=d.pop(),f=e.g,e=e.f,g=[],h=0,k=d.length;h<k;h++){var m;a:{m=e;var p=d[h].f,n=void 0;for(n in m.value)if(!p.value.hasOwnProperty(n)||m.value[n]!==p.value[n]){m=!1;break a}for(n in p.value)if(!m.value.hasOwnProperty(n)||m.value[n]!==p.value[n]){m=!1;break a}m=!0}m?f=B(f,d[h].g):g.push(d[h])}a.push(new K(f,e));return b(a,g)}return a}return b([],a)};function ob(){this.f=[["\\d*\\.\\d*","number"],["\\d+","number"],["i","imaginary"],["[a-hj-z]","variable"],["[\\+\\*\\^-]","operator"],["[\\(\\)]","parenthesis"]]}function ya(a){for(var b=(new ob).f,c="(?:",d=0,e=b.length;d<e;d++)c+=(0<d?"|(":"(")+b[d][0]+")";c=new RegExp(c+")","g");for(d=[];e=c.exec(a);){var f=e[0];d.push({type:b[e.slice(1).indexOf(f)][1],value:f})}return d};function mb(a,b,c){c=void 0===c?4+2*X:c;c=new Float32Array(c*b.l);a.bindTransformFeedback(a.TRANSFORM_FEEDBACK,b.f);a.bindBufferBase(a.TRANSFORM_FEEDBACK_BUFFER,0,b.O);a.getBufferSubData(a.TRANSFORM_FEEDBACK_BUFFER,0,c);a.bindBufferBase(a.TRANSFORM_FEEDBACK_BUFFER,0,null);a.bindTransformFeedback(a.TRANSFORM_FEEDBACK,null);return c}
function Za(a,b){var c;c=void 0===c?4+2*X:c;for(var d=b.D,e=mb(a,b,c),f=new Float32Array(16777216),g=0;g<=X/2;g++){a.bindTexture(a.TEXTURE_2D,d[g]);a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MAG_FILTER,a.NEAREST);a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MIN_FILTER,a.NEAREST);a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_S,a.CLAMP_TO_EDGE);a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_T,a.CLAMP_TO_EDGE);for(var h=0;h<b.l;h++)for(var k=0;4>k;k++)f[4*h+k]=e[c*h+4*g+k];a.texImage2D(a.TEXTURE_2D,0,a.RGBA16F,2048,
2048,0,a.RGBA,a.FLOAT,f)}}function v(a,b,c,d){a.bindTransformFeedback(a.TRANSFORM_FEEDBACK,b.f);a.bindBufferBase(a.TRANSFORM_FEEDBACK_BUFFER,0,b.O);a.bufferData(a.TRANSFORM_FEEDBACK_BUFFER,c*Float32Array.BYTES_PER_ELEMENT,a.STATIC_COPY);a.beginTransformFeedback(a.TRIANGLES);d();a.endTransformFeedback();a.bindBufferBase(a.TRANSFORM_FEEDBACK_BUFFER,0,null);a.bindTransformFeedback(a.TRANSFORM_FEEDBACK,null)};function pb(a){var b;b=b?b:null;return"list"!==a.ctype?(console.log("argument is not a list"),b):a.value}function qb(a,b){b=b?b:[.5,.5,.5];if("number"===a.ctype){var c=rb(a);if(!isNaN(c))return[c,c,c]}a=pb(a);return a?3!=a.length?(console.log("Not an RGB color vector"),b):a.map(function(a){return rb(a)}):b}
function sb(a,b){b=void 0===b?Number.NaN:b;if("number"!==a.ctype)return console.log("argument is not a number"),b;a=a.value;b=a.real;0!==a.imag&&console.log("complex number is not real");return b}function tb(a){var b=12,b=void 0===b?Number.NaN:b;if("number"!==a.ctype)return console.log("argument is not a number"),b;b=a.value;a=b.real;b=b.imag;0!==b&&console.log("complex number is not real");b=Math.round(a);b!==a&&console.log("number is not an integer");return b}
function rb(a,b){b=void 0===b?Number.NaN:b;a=sb(a,b);return 0>a?0:1<a?1:a}function ub(a,b){b=void 0===b?null:b;if("string"===a.ctype)return a.value;console.log("argument is not a string");return b}function vb(a){if("boolean"===a.ctype)return a.value;console.log("argument is not boolean");return!1};CindyJS.registerPlugin(1,"ComplexCurves",function(a){function b(a,b){var c,d;for(c in a)(d=b[c])?d(e(a[c])):console.log("Modifier "+c+" not supported")}function c(a,c){a=ub(a[0],"CSCanvas");var e=f[a];if(!e)return console.log("Unknown instance '"+a+"'"),d;var m=1,p=[0,0,0];b(c,{alpha:function(a){m=rb(a,m)},autorotate:function(a){e.Y(vb(a))},background:function(a){p=qb(a,p)},clip:function(a){e.Z(vb(a))},ortho:function(a){e.$(vb(a))},transparency:function(a){e.aa(vb(a))},view:function(a){switch(ub(a)){case "Back":S(e,
Math.PI/2,Math.PI);break;case "Bottom":S(e,Math.PI,0);break;case "Default":S(e,O,P);break;case "Front":S(e,Math.PI/2,0);break;case "Left":S(e,Math.PI/2,-Math.PI/2);break;case "Right":S(e,Math.PI/2,Math.PI/2);break;case "Top":S(e,0,0)}},zoom:function(a){a=sb(a,1);e.s.B=a||1;e.m()}});e.A.j.clearColor(p[0],p[1],p[2],m);e.m();return d}var d=a.nada,e=a.evaluate;a=a.defineFunction;var f={};a("ComplexCurves",1,c);a("ComplexCurves",2,function(a,b){var k=ub(a[0],"CSCanvas"),m=document.getElementById(k),p=
ub(a[1],"y^2-x"),n=12;void 0!==b.depth&&(n=tb(e(b.depth)));delete b.depth;f[k]&&f[k].ma&&f[k].ma();if(".bin"===p.substr(-4,4))var q=Ha(m,p,function(){f[k]=q;c([a[0]],b)});else if(m=Fa(m,p,n))f[k]=m,c([a[0]],b);return d})});
})();//# sourceMappingURL=ComplexCurves.js.map

